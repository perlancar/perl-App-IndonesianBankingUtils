#!perl

# DATE
# DIST
# VERSION

use 5.010;
use strict;
use warnings;
use Log::ger;

use Data::Dmp;
use Log::ger::Level::FromEnv;
use Log::ger::Output ();

our %SPEC;

$SPEC{download_bca} = {
    v => 1.1,
    summary => 'Download BCA statement',
    args => {
        username  => {schema=>'str*', req=>1},
        password  => {schema=>'str*', req=>1},
        account   => {schema=>'str*'},
        data_dir  => {schema=>'str*'},
        log_dir   => {schema=>'str*'},
        save_dir  => {schema=>'str*'},
        mode      => {
            summary=>'Passed to Finance::Bank::ID::BCA constructor',
            schema=>'str*',
            default=>'',
        },
        days      => {schema=>'int*', default=>31},
    },
};
sub download_bca {
    require File::HomeDir;

    my %args = @_;

    my $data_dir = $args{data_dir} // File::HomeDir->my_home . "/bca";
    my $log_dir  = $args{log_dir}  // File::HomeDir->my_home . "/bca/logs";
    my $save_dir = $args{save_dir} // File::HomeDir->my_home . "/bca/logs/save";

    Log::ger::Output->set(
        'Composite',
        category_level => {Dumps => 'off'},
        outputs        => {
            Screen => {
                layout => [Pattern => {format=>'[%r] %m'}],
            },
            File => {
                conf => { path => "$log_dir/main.log" },
                layout => [Pattern => {format=>'[%d] [PID %P] %m'}],
            },
            DirWriteRotate => {
                conf  => { path => "$log_dir/dumps" },
                level => 'off',
                category_level => {Dumps => 'trace'},
            },
        },
    );

    require File::Path;
    File::Path::mkpath($data_dir) unless -d $data_dir;
    die "Can't create data_dir `$data_dir'" unless -d $data_dir;

    log_info("Start session");

    require Finance::Bank::ID::BCA;
    my $ibank = Finance::Bank::ID::BCA->new(
        username     => $args{username},
        password     => $args{password},
        logger       => Log::ger->get_logger(),
        logger_dump  => Log::ger->get_logger(category => "Dumps"),
        verify_https => 1,
        save_dir     => $save_dir,
        mode         => $args{mode},
    );

    eval {
        my @bal = $ibank->_check_balances;
        log_debug("Balances: ".dmp(\@bal));

        my $stmt = $ibank->get_statement(
            account    => $args{account},
            days       => $args{days},
            parse_opts => {return_datetime_obj=>0},
        );
        my $filename = sprintf("%s/bca.statement.%s.%s.to.%s.yaml",
                               $data_dir,
                               $stmt->{account},
                               $stmt->{start_date},
                               $stmt->{end_date});
        $filename =~ s/[: ]//g; # : is for windows
        log_info("Writing statements to YAML file `$filename' ...");
        require File::Slurper;
        require YAML::Syck;
        File::Slurper::write_text($filename, YAML::Syck::Dump($stmt));
    };

    if ($@) {
        log_error("die: $@");
    }

    # no matter what, try to logout so we're not locked out for 10 minutes,
    # annoying
    eval { $ibank->logout };

    log_info("End session");
    [200];
}

require Perinci::CmdLine::Lite;
Perinci::CmdLine::Lite->new(
    url => '/main/download_bca',
    extra_urls_for_version => ['/Finance/Bank/ID/BCA/'],
)->run;

# ABSTRACT:
# PODNAME:

=head1 SYNOPSIS

First, put your username and password in C<~/download-bca.conf>, e.g.:

 username=ABCDEF0123
 password=123456

Then:

 % download-bca

Or, if you want to store multiple profiles in the configuration:

 [jajang]
 username=jajang0123
 password=123456

 [saidah]
 username=saidah0123
 password=123456

Then:

 % download-bca --config-profile jajang

Get your statements in data dir (defaults to C<~/bca>). See logs in your log dir
(defaults to C<~/bca/logs>).


=head1 DESCRIPTION

This is a command-line script which you can run from cron or whatever to
conveniently download BCA statements. By default, it downloads 31 day's worth of
statements to C<~/bca/>. To change this, use C<--days> and C<--data-dir>
options.


=head1 SEE ALSO

L<Finance::Bank::ID::BCA>

=cut
